name: Tests ðŸŽ³

on:
  push:
    tags:
      - '*'
    branches:
      - '*'
  pull_request:

jobs:
  unittests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        qgis_version: [
            "3.10",
            "3.16",
        ]

    steps:

      - name: Checkout
        uses: actions/checkout@master

      - name: Setup
        run: |
          mkdir .local
          mkdir .cache

      - name: Run tests
        run:
          docker run
          --rm --name qgis-server
          -u $(id -u)
          -v ${GITHUB_WORKSPACE}/.cache:/.cache
          -e PIP_CACHE_DIR=/.cache
          -w /src/tests
          -e PYTEST_ADDOPTS=""
          -v ${GITHUB_WORKSPACE}:/src
          -v ${GITHUB_WORKSPACE}/.local:/.local
          3liz/qgis-platform:${{ matrix.qgis_version }}
          ./run-tests.sh

  flake8:
    runs-on: ubuntu-latest
    steps:

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          architecture: x64

      - name: Checkout
        uses: actions/checkout@master

      - name: Install flake8
        run: pip install flake8

      - name: Run flake8
        uses: suo/flake8-github-action@releases/v1
        with:
          checkName: 'flake8'   # NOTE: this needs to be the same as the job name
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  release:
    needs: [flake8, unittests]

    runs-on: ubuntu-latest
    if: github.repository == '3liz/qgis-atlasprint' && contains(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install qgis-plugin-ci
      run: pip3 install qgis-plugin-ci==1.8.4

    - name : Fetch current changelog
      run: |
        qgis-plugin-ci changelog ${GITHUB_REF/refs\/tags\//} >> release.md
        cat release.md

    - name: Create release on GitHub
      id: create_release
      uses: ncipollo/release-action@v1.7.3
      with:
        bodyFile: release.md
        token: ${{ secrets.BOT_HUB_TOKEN }}

    - name: Package the plugin and deploy it in the release
      run: >-
        qgis-plugin-ci
        release ${GITHUB_REF/refs\/tags\//}
        --github-token ${{ secrets.BOT_HUB_TOKEN }}
        --osgeo-username ${{ secrets.OSGEO_USERNAME }}
        --osgeo-password ${{ secrets.OSGEO_PASSWORD }}
        --create-plugin-repo
